meal_planner/
├─ android/ ios/ macos/ windows/ linux/ web/            # platform dirs
├─ firebase/                                            # Firebase config + emulators + functions
│  ├─ firestore.rules
│  ├─ firestore.indexes.json
│  ├─ storage.rules
│  ├─ firebase.json
│  ├─ .firebaserc
│  ├─ emulators.json
│  ├─ seed/                                            # emulator seed data (json/csv)
│  └─ functions/                                       # (optional) Cloud Functions (TypeScript)
├─ assets/
│  ├─ fonts/
│  ├─ icons/
│  └─ images/
├─ l10n/                                               # ARB files (intl)
│  ├─ app_en.arb
│  ├─ app_si.arb
│  └─ app_ta.arb
├─ lib/
│  ├─ bootstrap/                                       # app entrypoints & flavor bootstrap
│  │  ├─ main_common.dart
│  │  ├─ main_dev.dart
│  │  ├─ main_stage.dart
│  │  └─ main_prod.dart
│  ├─ app/                                             # app-wide wiring
│  │  ├─ app.dart                                      # MaterialApp + GoRouter
│  │  ├─ router/                                       # navigation (typed GoRouter)
│  │  │  ├─ routes.dart
│  │  │  └─ route_guards.dart
│  │  ├─ di/                                           # Riverpod providers for cross-cutting deps
│  │  │  ├─ firebase_providers.dart                    # FirebaseApp, Auth, Firestore, Crashlytics, etc.
│  │  │  ├─ analytics_providers.dart
│  │  │  └─ storage_providers.dart
│  │  ├─ theme/
│  │  │  ├─ theme.dart
│  │  │  ├─ colors.dart
│  │  │  └─ typography.dart
│  │  ├─ localization/
│  │  │  ├─ l10n.dart                                  # generated bindings
│  │  │  └─ localization_extensions.dart
│  │  └─ widgets/                                      # global UI elements (AppScaffold, AppSnackBar)
│  ├─ core/                                            # clean-arch "shared kernel"
│  │  ├─ config/                                       # flavor/env config & constants
│  │  │  ├─ flavor.dart                                # enum + helpers
│  │  │  └─ app_config.dart                            # values injected via --dart-define
│  │  ├─ errors/                                       # Failures/Exceptions (sealed classes)
│  │  ├─ utils/                                        # date, money, units, validators
│  │  ├─ guards/                                       # app-level Route guards (auth, onboarding)
│  │  ├─ services/                                     # abstracted services
│  │  │  ├─ crash_service.dart
│  │  │  ├─ analytics_service.dart
│  │  │  ├─ remote_config_service.dart
│  │  │  └─ notifications_service.dart
│  │  ├─ data/                                         # shared data utils
│  │  │  ├─ mappers/                                   # dto<->entity mappers
│  │  │  ├─ adapters/                                  # Firebase to domain adapters
│  │  │  └─ storage/                                   # local cache (Hive/SharedPrefs abstraction)
│  │  └─ widgets/                                      # shared UI (loading, empty states, error views)
│  ├─ features/                                        # FEATURE-FIRST organization
│  │  ├─ auth/
│  │  │  ├─ data/
│  │  │  │  ├─ datasources/
│  │  │  │  │  └─ firebase_auth_datasource.dart
│  │  │  │  ├─ models/                                 # DTOs (freezed/json_serializable)
│  │  │  │  └─ repositories/
│  │  │  │     └─ auth_repository_impl.dart
│  │  │  ├─ domain/
│  │  │  │  ├─ entities/                               # User, HouseholdProfile
│  │  │  │  ├─ repositories/                           # abstract AuthRepository
│  │  │  │  └─ usecases/                               # signIn, signOut, getUserStream
│  │  │  └─ presentation/
│  │  │     ├─ providers/                              # Riverpod Notifiers
│  │  │     ├─ pages/                                  # SignInPage, OnboardingPage
│  │  │     └─ widgets/
│  │  ├─ onboarding/
│  │  │  └─ ...                                        # Household setup, goals baseline
│  │  ├─ pantry/
│  │  │  ├─ data/ (firestore_pantry_datasource.dart, hive_cache.dart)
│  │  │  ├─ domain/ (Item, Leftover, repositories, usecases)
│  │  │  └─ presentation/ (PantryPage, ExpiringSoonPage, providers, widgets)
│  │  ├─ recipes/
│  │  │  ├─ data/ (recipes_firestore_ds.dart)
│  │  │  ├─ domain/ (Recipe, Pairing, repositories, usecases)
│  │  │  └─ presentation/ (RecipeExplorerPage, RecipeDetailPage)
│  │  ├─ leftovers/
│  │  │  ├─ data/ (transformer_rules_ds.dart)
│  │  │  ├─ domain/ (Transformation, SafetyGuideline, usecases)
│  │  │  └─ presentation/ (LeftoverTransformerPage)
│  │  ├─ meal_planner/
│  │  │  ├─ data/ (planner_firestore_ds.dart)
│  │  │  ├─ domain/ (PlannedMeal, CalendarWeek, usecases)
│  │  │  └─ presentation/ (WeeklyPlannerPage, DailyPlanPage)
│  │  ├─ shopping_list/
│  │  │  ├─ data/ (list_generator.dart)
│  │  │  ├─ domain/ (ShoppingItem, usecases)
│  │  │  └─ presentation/ (ShoppingListPage, StoreModePage)
│  │  ├─ seasonal/
│  │  │  ├─ data/ (seasonal_calendar_ds.dart)
│  │  │  ├─ domain/ (SeasonalItem, usecases)
│  │  │  └─ presentation/ (SeasonalGuidePage)
│  │  ├─ insights/
│  │  │  ├─ data/ (waste_log_ds.dart, analytics_calculator.dart)
│  │  │  ├─ domain/ (WasteEvent, Savings, usecases)
│  │  │  └─ presentation/ (InsightsDashboardPage, WeeklyReviewPage)
│  │  ├─ knowledge/
│  │  │  └─ ...                                        # cultural tips & pairings
│  │  └─ settings/
│  │     └─ ...                                        # language switch, units, notifications
│  └─ main.dart                                        # delegates to /bootstrap/*
├─ test/
│  ├─ unit/                                            # pure Dart + usecase tests
│  ├─ widget/                                          # widget tests (goldens optional)
│  └─ features/…                                       # feature-level tests
├─ integration_test/                                   # E2E with Firebase Emulator Suite
├─ tool/                                               # codegen helpers, scripts
├─ scripts/                                            # CI scripts (analyze, format, build_runner)
├─ pubspec.yaml
├─ analysis_options.yaml                               # strict lints (very_good_analysis/flutter_lints)
└─ .github/workflows/                                  # CI pipelines (test, build, release)
